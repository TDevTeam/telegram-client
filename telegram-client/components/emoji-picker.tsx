"use client"

import { useState } from "react"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Input } from "@/components/ui/input"
import { ScrollArea } from "@/components/ui/scroll-area"
import { Search } from "lucide-react"

const emojiCategories = {
  smileys: ["üòÄ", "üòÉ", "üòÑ", "üòÅ", "üòÜ", "üòÖ", "üòÇ", "ü§£", "üòä", "üòá", "üôÇ", "üôÉ", "üòâ", "üòå", "üòç", "ü•∞", "üòò"],
  gestures: ["üëç", "üëé", "üëå", "‚úåÔ∏è", "ü§û", "ü§ü", "ü§ò", "ü§ô", "üëà", "üëâ", "üëÜ", "üëá", "‚òùÔ∏è", "‚úã", "ü§ö", "üñêÔ∏è", "üññ"],
  hearts: ["‚ù§Ô∏è", "üß°", "üíõ", "üíö", "üíô", "üíú", "üñ§", "üíî", "‚ù£Ô∏è", "üíï", "üíû", "üíì", "üíó", "üíñ", "üíò", "üíù", "üíü"],
  animals: ["üê∂", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üêØ", "ü¶Å", "üêÆ", "üê∑", "üê∏", "üêµ", "üêî", "üêß"],
  food: ["üçè", "üçé", "üçê", "üçä", "üçã", "üçå", "üçâ", "üçá", "üçì", "üçà", "üçí", "üçë", "ü•≠", "üçç", "ü••", "ü•ù", "üçÖ"],
}

interface EmojiPickerProps {
  onEmojiSelect: (emoji: string) => void
}

export function EmojiPicker({ onEmojiSelect }: EmojiPickerProps) {
  const [searchQuery, setSearchQuery] = useState("")

  const filteredEmojis = searchQuery
    ? Object.values(emojiCategories)
        .flat()
        .filter((emoji) => emoji.includes(searchQuery))
    : null

  return (
    <div className="w-64 rounded-lg border bg-background p-2 shadow-lg">
      <div className="relative mb-2">
        <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
        <Input
          placeholder="Search emoji..."
          className="pl-8"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
        />
      </div>

      {searchQuery ? (
        <div className="grid grid-cols-7 gap-1 p-2">
          {filteredEmojis?.map((emoji) => (
            <button
              key={emoji}
              className="flex h-8 w-8 items-center justify-center rounded-md hover:bg-muted"
              onClick={() => onEmojiSelect(emoji)}
            >
              {emoji}
            </button>
          ))}
        </div>
      ) : (
        <Tabs defaultValue="smileys">
          <TabsList className="grid w-full grid-cols-5">
            <TabsTrigger value="smileys">üòÄ</TabsTrigger>
            <TabsTrigger value="gestures">üëç</TabsTrigger>
            <TabsTrigger value="hearts">‚ù§Ô∏è</TabsTrigger>
            <TabsTrigger value="animals">üê∂</TabsTrigger>
            <TabsTrigger value="food">üçè</TabsTrigger>
          </TabsList>

          {Object.entries(emojiCategories).map(([category, emojis]) => (
            <TabsContent key={category} value={category} className="mt-2">
              <ScrollArea className="h-[200px]">
                <div className="grid grid-cols-7 gap-1 p-2">
                  {emojis.map((emoji) => (
                    <button
                      key={emoji}
                      className="flex h-8 w-8 items-center justify-center rounded-md hover:bg-muted"
                      onClick={() => onEmojiSelect(emoji)}
                    >
                      {emoji}
                    </button>
                  ))}
                </div>
              </ScrollArea>
            </TabsContent>
          ))}
        </Tabs>
      )}
    </div>
  )
}

